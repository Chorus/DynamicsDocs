"use strict";(self.webpackChunkdynamics_docs=self.webpackChunkdynamics_docs||[]).push([[9347],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var i=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=i.createContext({}),c=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=c(e.components);return i.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=o,f=u["".concat(l,".").concat(m)]||u[m]||p[m]||r;return n?i.createElement(f,a(a({ref:t},d),{},{components:n})):i.createElement(f,a({ref:t},d))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,a=new Array(r);a[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var c=2;c<r;c++)a[c]=n[c];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2812:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var i=n(7462),o=(n(7294),n(3905));const r={id:"Conditions",title:"Conditions"},a="Conditions",s={unversionedId:"Patients/Conditions",id:"Patients/Conditions",title:"Conditions",description:"A Condition record stores a patient's diagnosis information. The condition will be included on Claims for this patient.",source:"@site/docs/Patients/Conditions.md",sourceDirName:"Patients",slug:"/Patients/Conditions",permalink:"/docs/Patients/Conditions",draft:!1,tags:[],version:"current",frontMatter:{id:"Conditions",title:"Conditions"},sidebar:"sidebars",previous:{title:"Connections",permalink:"/docs/Patients/Connection"},next:{title:"Episodes of Care",permalink:"/docs/Patients/EpisodeOfCare"}},l={},c=[{value:"Create a Condition",id:"create-a-condition",level:2}],d={toc:c};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"conditions"},"Conditions"),(0,o.kt)("p",null,"A Condition record stores a patient's diagnosis information. The condition will be included on Claims for this patient."),(0,o.kt)("h2",{id:"create-a-condition"},"Create a Condition"),(0,o.kt)("p",null,"To create a new Condition, click 'New Condition' on the Conditions subgrid (on a Patient Contact Form). This will open up the New Condition Quick Create Form."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Condition Information")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},"Patient")," - prepopulated as the patient whose profile you\u2019re on when adding this record."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},"Condition Code")," - select the condition code that matches the patient\u2019s diagnosis. "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},"Clinical Status")," - select the status of the patient\u2019s condition - whether it is Active, Recurrence, Inactive, Remission, or Resolved.  "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},"Severity")," - select the severity of this condition in the patient \u2013 mild, moderate or severe."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},"Onset")," - enter the date this condition began, or was diagnosed on."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},"Historical As Of")," - this field tracks the end date for a condition. It is usually left blank for ASD conditions.")),(0,o.kt)("p",null,"If there is more than one diagnosis tracked on the patient, then \u2018Autism Disorder\u2019 is populated as the first diagnosis on the claim, and the other ones follow."))}p.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkdynamics_docs=self.webpackChunkdynamics_docs||[]).push([[3608],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=c(n),h=r,m=p["".concat(l,".").concat(h)]||p[h]||d[h]||i;return n?a.createElement(m,s(s({ref:t},u),{},{components:n})):a.createElement(m,s({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=p;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var c=2;c<i;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},7508:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const i={id:"InsurancePlan",title:"Insurance Plan"},s="Insurance Plan",o={unversionedId:"AdminSetup/InsurancePlan",id:"AdminSetup/InsurancePlan",title:"Insurance Plan",description:"Insurance Plans are the various options each insurance provider offers. Add one insurance plan for each of the different plans that you will be accepting for that payer. These same plans will be used to track your patients\u2019 coverage records.",source:"@site/docs/AdminSetup/InsurancePlan.md",sourceDirName:"AdminSetup",slug:"/AdminSetup/InsurancePlan",permalink:"/docs/AdminSetup/InsurancePlan",draft:!1,tags:[],version:"current",frontMatter:{id:"InsurancePlan",title:"Insurance Plan"},sidebar:"sidebars",previous:{title:"Healthcare Service",permalink:"/docs/AdminSetup/HealthcareService"},next:{title:"Location",permalink:"/docs/AdminSetup/Location"}},l={},c=[{value:"Insurance Plan Benefits",id:"insurance-plan-benefits",level:2},{value:"Healthcare Units",id:"healthcare-units",level:3},{value:"Product Codes",id:"product-codes",level:3},{value:"Required Qualifications",id:"required-qualifications",level:2}],u={toc:c};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"insurance-plan"},"Insurance Plan"),(0,r.kt)("p",null,"Insurance Plans are the various options each insurance provider offers. Add one insurance plan for each of the different plans that you will be accepting for that payer. These same plans will be used to track your patients\u2019 coverage records."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Payer")," \u2013 The payer of this payer."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Name")," \u2013 The plan name.\nOnce the Insurance Plan record is saved, you can add Insurance Plan Benefits.")),(0,r.kt)("h2",{id:"insurance-plan-benefits"},"Insurance Plan Benefits"),(0,r.kt)("p",null,"For each insurance plan, add insurance plan benefits, which define the payer's requirements that need to be met to receieve the benefits of the insurance plan. Insurance plan benefits control how encounters can be scheduled, serviced, and billed.\nThe following fields should be set on an Insurance Plan Benefit:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Insurance Plan")," \u2013 Select the Insurance Plan that this Insurance Plan Benefit belongs to."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Service")," \u2013 Select the ",(0,r.kt)("a",{parentName:"li",href:"/docs/AdminSetup/HealthcareService"},"Healthcare Service")," that best fits this Insurance Plan Benefit. ",(0,r.kt)("admonition",{parentName:"li",type:"note"},(0,r.kt)("p",{parentName:"admonition"},"The Service here will control the behavior of the session in the Note app, for each encounter scheduled against this Insurance Plan Benefit. ",(0,r.kt)("a",{parentName:"p",href:"/docs/AdminSetup/HealthcareService"},"Read more about Healthcare Service Types"),"."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Procedure Code")," \u2013 Select the procedure code that this service should be billed with. See Product Codes(#Product Codes)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Requires Assignment")," \u2013 Set as \u2018Yes\u2019 if you want to restrict scheduling encounters against this service code without an assignment, otherwise set as \u2018No\u2019."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Requires Patient Present")," \u2013 Set as \u2018Yes\u2019 if you want to restrict scheduling the patient on another encounter at the same time as an encounter for this service is taking place."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Unit of Measure")," \u2013 The number of minutes that a single unit of this service consists of. See ","[Healthcare Units]","(#Healthcare Units)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Minimum Units Required")," \u2013 The minimum units required to schedule an encounter for this service."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Maximum Units Allowed")," \u2013 The maximum units allowed to schedule for an encounter for this service.\nOnce the Insurance Plan Benefit record is saved, the Required Qualifications can be added.")),(0,r.kt)("h3",{id:"healthcare-units"},"Healthcare Units"),(0,r.kt)("p",null,"These records define the number of minutes in one unit of service. These records differentiate between a service that is billed in 15 minute increments, versus one that is billed in 1 hour increments.\nUpon installation of the Autism Care app, 4 Healthcare Service records are included \u2013 1 Minute, 15 minutes, 30 minutes and 1 Hour.\nIf any additional denominations are needed, please reach out to your customer success lead or support for assistance. "),(0,r.kt)("h3",{id:"product-codes"},"Product Codes"),(0,r.kt)("p",null,"This is the list of products \u2013 service codes \u2013 that you will be providing to your clients. These will be carried over to your claims when you bill insurance payers. (Most fields should have the same value, they will be referenced to from different records within the app.)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Name \u2013 Service code"),(0,r.kt)("li",{parentName:"ul"},"Code - Service code"),(0,r.kt)("li",{parentName:"ul"},"System - ",(0,r.kt)("a",{parentName:"li",href:"https://schemas.chorus.cloud/usclscodes/autismcare"},"https://schemas.chorus.cloud/usclscodes/autismcare"))),(0,r.kt)("h2",{id:"required-qualifications"},"Required Qualifications"),(0,r.kt)("p",null,"These are the qualification requirements for each service. Once they are set up here, the system will validate that any time an encounter is scheduled for this service \u2013 the practitioner on the encounter has the required credentials and they are not expired. "),(0,r.kt)("p",null,"Each required qualification should be added individually. If a required qualification can be interchanged with another qualification, they can be added as one required qualification and the system will validate that the practitioner has either one of the qualifications selected."))}d.isMDXComponent=!0}}]);